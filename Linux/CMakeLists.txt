CMAKE_MINIMUM_REQUIRED(VERSION 3.15)
PROJECT(AndroidTrackpad VERSION 1.0.0 LANGUAGES CXX)

# set cpp standard
SET(CMAKE_CXX_STANDARD 11)
SET(CMAKE_EXPORT_COMPILE_COMMANDS ON)
# add preprocessor definitions
ADD_DEFINITIONS(-DGLEW_STATIC)
ADD_DEFINITIONS(-DIMGUI_IMPL_OPENGL_LOADER_GLEW)
# ADD_DEFINITIONS(-DSDL_VIDEO_DRIVER_X11=1)
# set flags for different compile options
SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -Wextra")
SET(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -g")
SET(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -O2")
# create output folders if not exist
IF(NOT EXISTS "${CMAKE_SOURCE_DIR}/bin/Debug")
FILE(MAKE_DIRECTORY "${CMAKE_SOURCE_DIR}/bin/Debug")
ENDIF()
IF(NOT EXISTS "${CMAKE_SOURCE_DIR}/bin/Release")
FILE(MAKE_DIRECTORY "${CMAKE_SOURCE_DIR}/bin/Release")
ENDIF()
# set output paths
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG "${CMAKE_SOURCE_DIR}/bin/Debug")
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE "${CMAKE_SOURCE_DIR}/bin/Release")
# find source code for ImGui
FILE(GLOB IMGUI_SRC_FILES "${CMAKE_SOURCE_DIR}/external/imgui/src/*.cpp")
ADD_LIBRARY(IMGUI_LIBRARIES
    ${IMGUI_SRC_FILES}
)
# find source code for this project
FILE(GLOB SRC_FILES "${CMAKE_SOURCE_DIR}/src/*.cpp")
# set basic include directories
INCLUDE_DIRECTORIES(
    ${CMAKE_SOURCE_DIR}/include
    ${CMAKE_SOURCE_DIR}/external/imgui/include
)
# setup OpenGL
FIND_PACKAGE(OpenGL REQUIRED)
# setup GLEW
FIND_PACKAGE(GLEW REQUIRED)
IF(GLEW_FOUND)
    INCLUDE_DIRECTORIES(${GLEW_INCLUDE_DIRS})
ELSE()
    MESSAGE(FATAL_ERROR "GLEW is not installed on this machine")
ENDIF()
# setup SDL2
FIND_PATH(SDL2_INCLUDE_DIRS NAMES SDL2/SDL.h)
FIND_LIBRARY(SDL2_LIBRARIES NAMES SDL2 SDL2main)
IF((NOT SDL2_INCLUDE_DIRS) OR (NOT SDL2_LIBRARIES))
    MESSAGE(FATAL_ERROR "SDL2 is not installed on this machine")
ELSE()
    INCLUDE_DIRECTORIES(${SDL2_INCLUDE_DIRS})
ENDIF()
# setup threads
SET(CMAKE_THREAD_PREFER_PTHREAD TRUE)
FIND_PACKAGE(Threads REQUIRED)
# setup X11
FIND_PACKAGE(X11 REQUIRED)
IF(X11_FOUND)
    INCLUDE_DIRECTORIES(${X11_INCLUDE_DIRS})
ELSE()
    MESSAGE(FATAL_ERROR "X11 is not installed on this machine")
ENDIF()
# setup bluetooth
FIND_PATH(BLUETOOTH_INCLUDE_DIR NAMES bluetooth/bluetooth.h)
FIND_LIBRARY(BLUETOOTH_LIBRARY NAMES bluetooth)
IF((NOT BLUETOOTH_INCLUDE_DIR) OR (NOT BLUETOOTH_LIBRARY))
    MESSAGE(FATAL_ERROR "bluetooth dev is not installed on this machine")
ELSE()
    INCLUDE_DIRECTORIES(${BLUETOOTH_INCLUDE_DIR})
ENDIF()
# add executable
ADD_EXECUTABLE(TrackpadService ${SRC_FILES})
# set link libraries
TARGET_LINK_LIBRARIES(TrackpadService
    IMGUI_LIBRARIES
    ${GLEW_LIBRARIES}
    ${SDL2_LIBRARIES}
    ${X11_LIBRARIES}
    ${BLUETOOTH_LIBRARY}
    ${OPENGL_LIBRARIES}
    ${CMAKE_THREAD_LIBS_INIT}
)